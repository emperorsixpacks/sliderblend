"""added updated date

Revision ID: 13c4a547820c
Revises: aeecb3d15b55
Create Date: 2025-04-11 14:07:27.982217

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import pgvector


# revision identifiers, used by Alembic.
revision: str = '13c4a547820c'
down_revision: Union[str, None] = 'aeecb3d15b55'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute("CREATE EXTENSION IF NOT EXISTS vector")
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('document_embeddings', sa.Column('updated_date', sa.DateTime(), nullable=False))
    op.add_column('documents', sa.Column('updated_date', sa.DateTime(), nullable=False))
    op.add_column('users', sa.Column('updated_date', sa.DateTime(), nullable=False))
    op.create_unique_constraint(None, 'users', ['telegram_username'])
    op.create_unique_constraint(None, 'users', ['telegram_user_id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_column('users', 'updated_date')
    op.drop_column('documents', 'updated_date')
    op.drop_column('document_embeddings', 'updated_date')
    # ### end Alembic commands ###
